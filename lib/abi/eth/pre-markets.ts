export const PreMarketABI = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "abortAskOffer",
    inputs: [
      { name: "_stock", type: "address", internalType: "address" },
      { name: "_offer", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "abortBidTaker",
    inputs: [
      { name: "_stock", type: "address", internalType: "address" },
      { name: "_offer", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "closeOffer",
    inputs: [
      { name: "_stock", type: "address", internalType: "address" },
      { name: "_offer", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOffer",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct CreateOfferParams",
        components: [
          {
            name: "marketPlace",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralTokenAddr",
            type: "address",
            internalType: "address",
          },
          { name: "points", type: "uint256", internalType: "uint256" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          {
            name: "collateralRate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "eachTradeTax",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offerType",
            type: "uint8",
            internalType: "enum OfferType",
          },
          {
            name: "offerSettleType",
            type: "uint8",
            internalType: "enum OfferSettleType",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createTaker",
    inputs: [
      { name: "_offer", type: "address", internalType: "address" },
      { name: "_points", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getMakerInfo",
    inputs: [{ name: "_maker", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "_makerInfo",
        type: "tuple",
        internalType: "struct MakerInfo",
        components: [
          {
            name: "offerSettleType",
            type: "uint8",
            internalType: "enum OfferSettleType",
          },
          { name: "authority", type: "address", internalType: "address" },
          {
            name: "marketPlace",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralTokenAddr",
            type: "address",
            internalType: "address",
          },
          {
            name: "originOffer",
            type: "address",
            internalType: "address",
          },
          {
            name: "eachTradeTax",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOfferInfo",
    inputs: [{ name: "_offer", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "_offerInfo",
        type: "tuple",
        internalType: "struct OfferInfo",
        components: [
          { name: "id", type: "uint256", internalType: "uint256" },
          { name: "authority", type: "address", internalType: "address" },
          { name: "maker", type: "address", internalType: "address" },
          {
            name: "offerStatus",
            type: "uint8",
            internalType: "enum OfferStatus",
          },
          {
            name: "offerType",
            type: "uint8",
            internalType: "enum OfferType",
          },
          {
            name: "abortOfferStatus",
            type: "uint8",
            internalType: "enum AbortOfferStatus",
          },
          { name: "points", type: "uint256", internalType: "uint256" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          {
            name: "collateralRate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "usedPoints",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "tradeTax", type: "uint256", internalType: "uint256" },
          {
            name: "settledPoints",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "settledPointTokenAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "settledCollateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStockInfo",
    inputs: [{ name: "_stock", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "_stockInfo",
        type: "tuple",
        internalType: "struct StockInfo",
        components: [
          { name: "id", type: "uint256", internalType: "uint256" },
          {
            name: "stockStatus",
            type: "uint8",
            internalType: "enum StockStatus",
          },
          {
            name: "stockType",
            type: "uint8",
            internalType: "enum StockType",
          },
          { name: "authority", type: "address", internalType: "address" },
          { name: "maker", type: "address", internalType: "address" },
          { name: "preOffer", type: "address", internalType: "address" },
          { name: "points", type: "uint256", internalType: "uint256" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "offer", type: "address", internalType: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializeOwnership",
    inputs: [{ name: "_newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "listStock",
    inputs: [
      { name: "_stock", type: "address", internalType: "address" },
      { name: "_amount", type: "uint256", internalType: "uint256" },
      {
        name: "_collateralRate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "makerInfoMap",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "offerSettleType",
        type: "uint8",
        internalType: "enum OfferSettleType",
      },
      { name: "authority", type: "address", internalType: "address" },
      { name: "marketPlace", type: "address", internalType: "address" },
      {
        name: "collateralTokenAddr",
        type: "address",
        internalType: "address",
      },
      { name: "originOffer", type: "address", internalType: "address" },
      { name: "eachTradeTax", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "offerId",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "offerInfoMap",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "id", type: "uint256", internalType: "uint256" },
      { name: "authority", type: "address", internalType: "address" },
      { name: "maker", type: "address", internalType: "address" },
      {
        name: "offerStatus",
        type: "uint8",
        internalType: "enum OfferStatus",
      },
      {
        name: "offerType",
        type: "uint8",
        internalType: "enum OfferType",
      },
      {
        name: "abortOfferStatus",
        type: "uint8",
        internalType: "enum AbortOfferStatus",
      },
      { name: "points", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      {
        name: "collateralRate",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "usedPoints", type: "uint256", internalType: "uint256" },
      { name: "tradeTax", type: "uint256", internalType: "uint256" },
      { name: "settledPoints", type: "uint256", internalType: "uint256" },
      {
        name: "settledPointTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "settledCollateralAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "relistStock",
    inputs: [
      { name: "_stock", type: "address", internalType: "address" },
      { name: "_offer", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rescue",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "token", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rollin",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rollinAtMap",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setPauseStatus",
    inputs: [{ name: "pauseSatus", type: "bool", internalType: "bool" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settleAskTaker",
    inputs: [
      { name: "_offer", type: "address", internalType: "address" },
      { name: "_stock", type: "address", internalType: "address" },
      {
        name: "_settledPoints",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_settledPointTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settledAskOffer",
    inputs: [
      { name: "_offer", type: "address", internalType: "address" },
      {
        name: "_settledPoints",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_settledPointTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stockInfoMap",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "id", type: "uint256", internalType: "uint256" },
      {
        name: "stockStatus",
        type: "uint8",
        internalType: "enum StockStatus",
      },
      {
        name: "stockType",
        type: "uint8",
        internalType: "enum StockType",
      },
      { name: "authority", type: "address", internalType: "address" },
      { name: "maker", type: "address", internalType: "address" },
      { name: "preOffer", type: "address", internalType: "address" },
      { name: "points", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "offer", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tadleFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ITadleFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOfferStatus",
    inputs: [
      { name: "_offer", type: "address", internalType: "address" },
      { name: "_status", type: "uint8", internalType: "enum OfferStatus" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateStockStatus",
    inputs: [
      { name: "_stock", type: "address", internalType: "address" },
      { name: "_status", type: "uint8", internalType: "enum StockStatus" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AbortAskOffer",
    inputs: [
      {
        name: "offer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AbortBidTaker",
    inputs: [
      {
        name: "stock",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CloseOffer",
    inputs: [
      {
        name: "offer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreateOffer",
    inputs: [
      {
        name: "_offer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_maker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_stock",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_marketPlace",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_authority",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_points",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "_amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreateTaker",
    inputs: [
      {
        name: "offer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "stock",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "points",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "tradeTax",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "platformFee",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ListStock",
    inputs: [
      {
        name: "offer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "stock",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "points",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OfferStatusUpdated",
    inputs: [
      {
        name: "_offer",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_status",
        type: "uint8",
        indexed: false,
        internalType: "enum OfferStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReferralBonus",
    inputs: [
      {
        name: "stock",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "referrer",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "authorityReferralBonus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "referrerReferralBonus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "tradingVolume",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "tradingFee",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RelistStock",
    inputs: [
      {
        name: "offer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Rescue",
    inputs: [
      {
        name: "to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Rollin",
    inputs: [
      {
        name: "authority",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetPauseStatus",
    inputs: [
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SettledAskOffer",
    inputs: [
      {
        name: "_offer",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_settledPoints",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "_settledPointTokenAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SettledBidTaker",
    inputs: [
      {
        name: "_offer",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_stock",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_settledPoints",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "_settledPointTokenAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StockStatusUpdated",
    inputs: [
      {
        name: "_stock",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_status",
        type: "uint8",
        indexed: false,
        internalType: "enum StockStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  { type: "error", name: "AmountIsZero", inputs: [] },
  { type: "error", name: "CallerIsNotDeliveryPlace", inputs: [] },
  {
    type: "error",
    name: "CallerIsNotRelatedContracts",
    inputs: [{ name: "", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "InvalidAbortOfferStatus",
    inputs: [
      {
        name: "_targetStatus",
        type: "uint8",
        internalType: "enum AbortOfferStatus",
      },
      {
        name: "_currentStatus",
        type: "uint8",
        internalType: "enum AbortOfferStatus",
      },
    ],
  },
  { type: "error", name: "InvalidCollateralRate", inputs: [] },
  { type: "error", name: "InvalidEachTradeTaxRate", inputs: [] },
  { type: "error", name: "InvalidOffer", inputs: [] },
  {
    type: "error",
    name: "InvalidOfferAccount",
    inputs: [
      {
        name: "_targetAccount",
        type: "address",
        internalType: "address",
      },
      {
        name: "_currentAccount",
        type: "address",
        internalType: "address",
      },
    ],
  },
  { type: "error", name: "InvalidOfferStatus", inputs: [] },
  {
    type: "error",
    name: "InvalidOfferType",
    inputs: [
      {
        name: "_targetType",
        type: "uint8",
        internalType: "enum OfferType",
      },
      {
        name: "_currentType",
        type: "uint8",
        internalType: "enum OfferType",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidStockStatus",
    inputs: [
      {
        name: "_targetStatus",
        type: "uint8",
        internalType: "enum StockStatus",
      },
      {
        name: "_currentStatus",
        type: "uint8",
        internalType: "enum StockStatus",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidStockType",
    inputs: [
      {
        name: "_targetType",
        type: "uint8",
        internalType: "enum StockType",
      },
      {
        name: "_currentType",
        type: "uint8",
        internalType: "enum StockType",
      },
    ],
  },
  { type: "error", name: "MakerAlreadyExist", inputs: [] },
  { type: "error", name: "MismatchedMarketPlaceStatus", inputs: [] },
  {
    type: "error",
    name: "NotEnoughPoints",
    inputs: [
      { name: "_totalPoints", type: "uint256", internalType: "uint256" },
      { name: "_usedPoints", type: "uint256", internalType: "uint256" },
      { name: "_points", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "OfferAlreadyExist", inputs: [] },
  {
    type: "error",
    name: "RollinTooSoon",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
  },
  { type: "error", name: "StockAlreadyExist", inputs: [] },
  { type: "error", name: "TransferFailed", inputs: [] },
  { type: "error", name: "Unauthorized", inputs: [] },
] as const;
